//
//  StyleKit.m
//  Salons
//
//  Created by Vyacheslav Dubovitsky on 30.04.15.
//  Copyright (c) 2015 A&P Media. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "StyleKit.h"


@implementation StyleKit

#pragma mark Cache

static UIColor* _main = nil;
static UIColor* _accent1 = nil;
static UIColor* _darkAccent = nil;
static UIColor* _darkAccent50 = nil;

#pragma mark Initialization

+ (void)initialize
{
    _main = [UIColor colorWithRed:0.0/255 green:179.0/255 blue:212.0/255 alpha:1];
    CGFloat mainHSBA[4];
    [_main getHue: &mainHSBA[0] saturation: &mainHSBA[1] brightness: &mainHSBA[2] alpha: &mainHSBA[3]];
    
    _accent1 = [UIColor colorWithHue: mainHSBA[0] saturation: mainHSBA[1] brightness: 0.7 alpha: mainHSBA[3]];

    _darkAccent = [UIColor colorWithRed: 0.141 green: 0.176 blue: 0.2 alpha: 1];
    _darkAccent50 = [StyleKit.darkAccent colorWithAlphaComponent: 0.5];
}

#pragma mark Colors

+ (UIColor*)accent1 { return _accent1; }
+ (UIColor*)darkAccent { return _darkAccent; }
+ (UIColor*)darkAccent50 { return _darkAccent50; }
+ (UIColor*)main { return _main; }

#pragma mark Drawing Methods

+ (void)drawAddPhotoButtonWithFrame: (CGRect)frame isHighlighted: (BOOL)isHighlighted withText: (NSString*)withText
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    
    //// Variable Declarations
    UIColor* darkButtonColor = isHighlighted ? StyleKit.darkAccent50 : StyleKit.darkAccent;
    
    
    //// Subframes
    CGRect bG = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), CGRectGetWidth(frame), CGRectGetHeight(frame));
    CGRect group = CGRectMake(CGRectGetMinX(frame) + floor((CGRectGetWidth(frame) - 210.5) * 0.49673 + 0.5), CGRectGetMinY(frame) + floor((CGRectGetHeight(frame) - 83) * 0.50000 + 0.5), 210.5, 83);
    
    
    //// BG
    {
        CGContextSaveGState(context);
        CGContextBeginTransparencyLayer(context, NULL);
        
        //// Clip Mask
        UIBezierPath* maskPath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bG) + floor(CGRectGetWidth(bG) * 0.00000 + 0.5), CGRectGetMinY(bG) + floor(CGRectGetHeight(bG) * 0.00000 + 0.5), floor(CGRectGetWidth(bG) * 1.00000 + 0.5) - floor(CGRectGetWidth(bG) * 0.00000 + 0.5), floor(CGRectGetHeight(bG) * 1.00000 + 0.5) - floor(CGRectGetHeight(bG) * 0.00000 + 0.5))];
        [maskPath addClip];
        
        
        //// Rectangle 2 Drawing
        UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bG) + floor(CGRectGetWidth(bG) * 0.00000 + 0.5), CGRectGetMinY(bG) + floor(CGRectGetHeight(bG) * 0.00000 + 0.5), floor(CGRectGetWidth(bG) * 1.00000 + 0.5) - floor(CGRectGetWidth(bG) * 0.00000 + 0.5), floor(CGRectGetHeight(bG) * 1.00000 + 0.5) - floor(CGRectGetHeight(bG) * 0.00000 + 0.5))];
        [StyleKit.darkAccent50 setStroke];
        rectangle2Path.lineWidth = 1;
        CGFloat rectangle2Pattern[] = {1, 1};
        [rectangle2Path setLineDash: rectangle2Pattern count: 2 phase: 0];
        [rectangle2Path stroke];
        
        
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }
    
    
    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 121, CGRectGetMinY(group) + 14.4)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 121, CGRectGetMinY(group) + 17.6)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 120.2, CGRectGetMinY(group) + 18.4) controlPoint1: CGPointMake(CGRectGetMinX(group) + 121, CGRectGetMinY(group) + 18.05) controlPoint2: CGPointMake(CGRectGetMinX(group) + 120.64, CGRectGetMinY(group) + 18.41)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 107.4, CGRectGetMinY(group) + 18.4)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 107.4, CGRectGetMinY(group) + 31.2)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 106.6, CGRectGetMinY(group) + 32) controlPoint1: CGPointMake(CGRectGetMinX(group) + 107.41, CGRectGetMinY(group) + 31.64) controlPoint2: CGPointMake(CGRectGetMinX(group) + 107.06, CGRectGetMinY(group) + 32.01)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 103.4, CGRectGetMinY(group) + 32)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 102.6, CGRectGetMinY(group) + 31.2) controlPoint1: CGPointMake(CGRectGetMinX(group) + 102.94, CGRectGetMinY(group) + 32) controlPoint2: CGPointMake(CGRectGetMinX(group) + 102.6, CGRectGetMinY(group) + 31.64)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 102.6, CGRectGetMinY(group) + 18.4) controlPoint1: CGPointMake(CGRectGetMinX(group) + 102.6, CGRectGetMinY(group) + 31.2) controlPoint2: CGPointMake(CGRectGetMinX(group) + 102.61, CGRectGetMinY(group) + 24.68)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 89.8, CGRectGetMinY(group) + 18.4) controlPoint1: CGPointMake(CGRectGetMinX(group) + 96.32, CGRectGetMinY(group) + 18.39) controlPoint2: CGPointMake(CGRectGetMinX(group) + 89.8, CGRectGetMinY(group) + 18.4)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 89, CGRectGetMinY(group) + 17.6) controlPoint1: CGPointMake(CGRectGetMinX(group) + 89.36, CGRectGetMinY(group) + 18.4) controlPoint2: CGPointMake(CGRectGetMinX(group) + 89, CGRectGetMinY(group) + 18.06)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 89, CGRectGetMinY(group) + 14.4)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 89.8, CGRectGetMinY(group) + 13.6) controlPoint1: CGPointMake(CGRectGetMinX(group) + 88.99, CGRectGetMinY(group) + 13.94) controlPoint2: CGPointMake(CGRectGetMinX(group) + 89.36, CGRectGetMinY(group) + 13.59)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 102.6, CGRectGetMinY(group) + 13.6)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 102.6, CGRectGetMinY(group) + 0.9)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 103.4, CGRectGetMinY(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 102.59, CGRectGetMinY(group) + 0.47) controlPoint2: CGPointMake(CGRectGetMinX(group) + 102.95, CGRectGetMinY(group) - 0)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 106.6, CGRectGetMinY(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 107.4, CGRectGetMinY(group) + 0.95) controlPoint1: CGPointMake(CGRectGetMinX(group) + 107.05, CGRectGetMinY(group) + 0) controlPoint2: CGPointMake(CGRectGetMinX(group) + 107.4, CGRectGetMinY(group) + 0.52)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 107.4, CGRectGetMinY(group) + 13.6) controlPoint1: CGPointMake(CGRectGetMinX(group) + 107.4, CGRectGetMinY(group) + 0.95) controlPoint2: CGPointMake(CGRectGetMinX(group) + 107.42, CGRectGetMinY(group) + 11.16)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 120.2, CGRectGetMinY(group) + 13.6) controlPoint1: CGPointMake(CGRectGetMinX(group) + 109.84, CGRectGetMinY(group) + 13.58) controlPoint2: CGPointMake(CGRectGetMinX(group) + 120.2, CGRectGetMinY(group) + 13.6)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 121, CGRectGetMinY(group) + 14.4) controlPoint1: CGPointMake(CGRectGetMinX(group) + 120.64, CGRectGetMinY(group) + 13.6) controlPoint2: CGPointMake(CGRectGetMinX(group) + 121, CGRectGetMinY(group) + 13.95)];
        [bezier2Path closePath];
        [darkButtonColor setFill];
        [bezier2Path fill];
        
        
        //// Text Drawing
        CGRect textRect = CGRectMake(CGRectGetMinX(group), CGRectGetMinY(group) + 39, 210.5, 44);
        NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
        textStyle.alignment = NSTextAlignmentCenter;
        
        NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 16], NSForegroundColorAttributeName: StyleKit.darkAccent, NSParagraphStyleAttributeName: textStyle};
        
        [withText drawInRect: textRect withAttributes: textFontAttributes];
    }
}

+ (void)drawAddPhotoButtonSideWithFrame: (CGRect)frame isHighlighted: (BOOL)isHighlighted
{

    //// Variable Declarations
    UIColor* mainButtonColor = isHighlighted ? StyleKit.accent1 : StyleKit.main;

    //// Normal Drawing
    UIBezierPath* normalPath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.00000 + 0.5), CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.00000 + 0.5), floor(CGRectGetWidth(frame) * 1.00000 + 0.5) - floor(CGRectGetWidth(frame) * 0.00000 + 0.5), floor(CGRectGetHeight(frame) * 1.00000 + 0.5) - floor(CGRectGetHeight(frame) * 0.00000 + 0.5)) byRoundingCorners: UIRectCornerTopRight | UIRectCornerBottomRight cornerRadii: CGSizeMake(22, 22)];
    [normalPath closePath];
    [mainButtonColor setFill];
    [normalPath fill];


    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 31, CGRectGetMinY(frame) + 21)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 31, CGRectGetMinY(frame) + 23)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 30.5, CGRectGetMinY(frame) + 23.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 31, CGRectGetMinY(frame) + 23.28) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 30.77, CGRectGetMinY(frame) + 23.5)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 22.5, CGRectGetMinY(frame) + 23.5)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 22.5, CGRectGetMinY(frame) + 31.5)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 22, CGRectGetMinY(frame) + 32) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 22.5, CGRectGetMinY(frame) + 31.78) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 22.29, CGRectGetMinY(frame) + 32)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 20, CGRectGetMinY(frame) + 32)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 19.5, CGRectGetMinY(frame) + 31.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 19.72, CGRectGetMinY(frame) + 32) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 19.5, CGRectGetMinY(frame) + 31.78)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 19.5, CGRectGetMinY(frame) + 23.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 19.5, CGRectGetMinY(frame) + 31.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 19.51, CGRectGetMinY(frame) + 27.43)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 11.5, CGRectGetMinY(frame) + 23.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 15.57, CGRectGetMinY(frame) + 23.49) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 11.5, CGRectGetMinY(frame) + 23.5)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 11, CGRectGetMinY(frame) + 23) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 11.22, CGRectGetMinY(frame) + 23.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 11, CGRectGetMinY(frame) + 23.28)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 11, CGRectGetMinY(frame) + 21)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 11.5, CGRectGetMinY(frame) + 20.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 11, CGRectGetMinY(frame) + 20.71) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 11.22, CGRectGetMinY(frame) + 20.5)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 19.5, CGRectGetMinY(frame) + 20.5)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 19.5, CGRectGetMinY(frame) + 12.56)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 20, CGRectGetMinY(frame) + 12) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 19.5, CGRectGetMinY(frame) + 12.29) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 19.72, CGRectGetMinY(frame) + 12)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 22, CGRectGetMinY(frame) + 12)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 22.5, CGRectGetMinY(frame) + 12.6) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 22.28, CGRectGetMinY(frame) + 12) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 22.5, CGRectGetMinY(frame) + 12.32)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 22.5, CGRectGetMinY(frame) + 20.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 22.5, CGRectGetMinY(frame) + 12.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 22.51, CGRectGetMinY(frame) + 18.98)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 30.5, CGRectGetMinY(frame) + 20.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 24.02, CGRectGetMinY(frame) + 20.49) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 30.5, CGRectGetMinY(frame) + 20.5)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 31, CGRectGetMinY(frame) + 21) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 30.77, CGRectGetMinY(frame) + 20.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 31, CGRectGetMinY(frame) + 20.72)];
    [bezier2Path closePath];
    [UIColor.whiteColor setFill];
    [bezier2Path fill];
}

+ (void)drawDeletePhotoButtonWithFrame: (CGRect)frame isHighlighted: (BOOL)isHighlighted
{

    //// Variable Declarations
    UIColor* mainButtonColor = isHighlighted ? StyleKit.accent1 : StyleKit.main;

    //// Normal Drawing
    UIBezierPath* normalPath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.00000 + 0.5), CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.00000 + 0.5), floor(CGRectGetWidth(frame) * 1.00000 + 0.5) - floor(CGRectGetWidth(frame) * 0.00000 + 0.5), floor(CGRectGetHeight(frame) * 1.00000 + 0.5) - floor(CGRectGetHeight(frame) * 0.00000 + 0.5)) cornerRadius: 22];
    [mainButtonColor setFill];
    [normalPath fill];


    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 32, CGRectGetMinY(frame) + 21)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 32, CGRectGetMinY(frame) + 23)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 31.5, CGRectGetMinY(frame) + 23.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 32, CGRectGetMinY(frame) + 23.28) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 31.77, CGRectGetMinY(frame) + 23.5)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 12.5, CGRectGetMinY(frame) + 23.5)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 23) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 12.22, CGRectGetMinY(frame) + 23.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 23.28)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 21)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 12.5, CGRectGetMinY(frame) + 20.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 12, CGRectGetMinY(frame) + 20.71) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 12.22, CGRectGetMinY(frame) + 20.5)];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 31.5, CGRectGetMinY(frame) + 20.5)];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 32, CGRectGetMinY(frame) + 21) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 31.77, CGRectGetMinY(frame) + 20.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 32, CGRectGetMinY(frame) + 20.72)];
    [bezier2Path closePath];
    [UIColor.whiteColor setFill];
    [bezier2Path fill];
}

@end
